<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project basedir="." default="main" name="AIGS Server">
    <import file="nbproject/build-impl.xml" optional="true"/>
    <property name="dist.dir" value="./dist"/>
    
    <!-- Load ant-contrib -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="lib/ant-contrib-1.0b3.jar"/>
        </classpath>
    </taskdef>

    <!-- Define class path - include all jars in lib -->
    <path id="AIGS Server.classpath">
        <pathelement location="bin"/>
        <fileset dir="lib">
            <include name="*.jar"/>
        </fileset>
    </path>
    
    <!-- Define properties -->
    <property name="AIGS Commons.location" value="../AIGS Commons"/>
    <property name="debuglevel" value="source,lines,vars"/>
    <property name="target" value="1.8"/>
    <property name="source" value="1.8"/>
    
    <!-- Delete bin folders. -->
    <target name="clean-server" description="Deletes bin folders">
        <echo message="Cleaning"/>
        <delete dir="bin"/>
        <delete dir="{AIGS Commons.location}/bin"/>
    </target>
    
    <!-- Make dirs, move non-class files to bin folder -->   
    <target name="init-server" description="Moves non-class files to bin">
        <echo message="Initializing..."/>
        <mkdir dir="bin"/>
        <mkdir dir="${AIGS Commons.location}/bin"/>
        <copy includeemptydirs="false" todir="bin">
            <fileset dir="src">
                <exclude name="**/*.java"/>
            </fileset>
        </copy>
    </target>
    
    <!-- Compile the commons, jar it and move it to lib  -->   
    <target name="build-commons" description="Compiles and jars the AIGS Commons.">
        <echo message="Building Commons..."/>
        <javac srcdir="${AIGS Commons.location}/src" destdir="${AIGS Commons.location}/bin" debug="true" debuglevel="${debuglevel}"  includeantruntime="false" source="${source}" target="${target}"/>
        <jar basedir="${AIGS Commons.location}/bin" destfile="lib/AIGS_Commons.jar"/>
    </target>
    
    <!-- Compile the server -->   
    <target name="build-server" description="Compiles the server.">
        <echo message="Building Server..."/>
        <javac srcdir="src" destdir="bin" debug="true" debuglevel="${debuglevel}"  includeantruntime="true" source="${source}" target="${target}">
            <classpath refid="AIGS Server.classpath"/>
        </javac>
    </target>
    
    <!-- Compile the games, jar them and move them to /gamelibs -->       
    <target name="build-games" description="builds games, jars and moves them">
        <!-- Iterate through all game commons -->   
<!--		
        <foreach target="gamesIteratorCommons" param="game.param" inheritall="true">
            <path>
                <dirset dir="games">
                    <include name="**/**Commons/src"/>
                </dirset>
            </path>
        </foreach>
-->
        <!-- Iterate through all games -->    
<!--		
        <foreach target="gamesIteratorServer" param="game.param" inheritall="true">
            <path>
                <dirset dir="games">
                    <exclude name="**/**Commons/src"/>
                    <include name="**/**/src"/>
                </dirset>
            </path>
        </foreach>
-->	
        <!-- Iterate through all games -->       
        <foreach target="gamesIterator" param="game.param" inheritall="true">
            <path>
                <dirset dir="games">
                    <include name="**/src"/>
                </dirset>
            </path>
        </foreach>	
    </target>	

    <!-- Isolates the game's name, compiles the sources, moves and jars them -->    
<!--	
    <target name="gamesIteratorCommons" description="builds a single game module's commons">
        <propertyregex property="prop.game.short" input="${game.param}" regexp="\\(([^\\]+))(?=\\[^\\]+\\?$)" select="\2"/>
        <propertyregex property="prop.game.short2" input="${prop.game.short}" regexp="(.*)Commons" select="\1"/>
        <propertyregex property="prop.game.root" input="${game.param}" regexp="(.+)\\src" select="\1"/>
        <echo>Building ${prop.game.short}</echo>
        <delete dir="${prop.game.root}/bin"/>
        <mkdir dir="${prop.game.root}/bin"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="${prop.game.root}/bin" includeantruntime="false" source="${source}" target="${target}">
            <src path="${prop.game.root}/src"/>
            <classpath>
                <fileset dir=".">
                    <include name="lib/AIGS_Commons.jar"/>
                </fileset>
            </classpath>
        </javac>
        <jar destfile="gamelibs/${prop.game.short}.jar" basedir="${prop.game.root}/bin"/>
-->        
        <!-- Create a jar containing the sources --> 
<!--		
        <jar destfile="gamelibs/${prop.game.short}_Sources.jar" basedir="${prop.game.root}/src" />
    </target>
-->	
    
    <!-- Isolates the game's name, compiles the sources, moves and jars them -->
<!--	
    <target name="gamesIteratorServer" description="builds a single game module">
        <propertyregex property="prop.game.short" input="${game.param}" regexp="\\(([^\\]+))(?=\\[^\\]+\\?$)" select="\2"/>
        <propertyregex property="prop.game.short2" input="${prop.game.short}" regexp="(.*)(?=Server)" select="\1"/>
        <propertyregex property="prop.game.root" input="${game.param}" regexp="(.+)\\src" select="\1"/>
        <echo>Building ${prop.game.short}</echo>
        <delete dir="${prop.game.root}/bin"/>
        <mkdir dir="${prop.game.root}/bin"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="${prop.game.root}/bin" source="${source}" includeantruntime="false" target="${target}">
            <src path="${prop.game.root}/src"/>
            <classpath>
                <fileset dir=".">
                    <include name="lib/AIGS_Commons.jar"/>
                    <include name="gamelibs/${prop.game.short}Commons.jar"/>
                    <include name="gamelibs/${prop.game.short2}Commons.jar"/>
                </fileset>
            </classpath>
        </javac>
        <jar destfile="gamelibs/${prop.game.short}.jar" basedir="${prop.game.root}/bin"/>
-->		
        <!-- Create a jar containing the sources -->           		
<!--		
        <jar destfile="gamelibs/${prop.game.short}_Sources.jar" basedir="${prop.game.root}/src" />        
    </target>
-->    
	
    <!-- Isolates the game's name, compiles the sources, moves and jars them -->               
    <target name="gamesIterator" description="builds a single game module">
        <propertyregex property="prop.game.short" input="${game.param}" regexp="\\(([^\\]+))(?=\\[^\\]+\\?$)" select="\2"/>
        <propertyregex property="prop.game.short2" input="${prop.game.short}" regexp="(.*)" select="\1"/>
        <propertyregex property="prop.game.root" input="${game.param}" regexp="(.+)\\src" select="\1"/>
        <echo>Building ${prop.game.short}</echo>
        <delete dir="${prop.game.root}/bin"/>
        <mkdir dir="${prop.game.root}/bin"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="${prop.game.root}/bin" source="${source}" includeantruntime="false" target="${target}">
            <src path="${prop.game.root}/src"/>
            <classpath>
                <fileset dir=".">
                    <include name="lib/AIGS_Commons.jar"/>
                    <include name="lib/AIGS_BaseClient.jar"/>
<!--					
                    <include name="gamelibs/${prop.game.short}Commons.jar"/>
                    <include name="gamelibs/${prop.game.short2}Commons.jar"/>
-->		
					<include name="gamelibs/${prop.game.short2}.jar"/>			
                </fileset>
            </classpath>
        </javac>
        <jar destfile="gamelibs/${prop.game.short}.jar" basedir="${prop.game.root}/bin"/>
        <!-- Create a jar containing the sources -->               
        <jar destfile="gamelibs/${prop.game.short}_Sources.jar" basedir="${prop.game.root}/src" />        
    </target>	
	
	
	
    <!-- Main target, this target calls all other targets -->               
    <target name="main" depends="clean-server, init-server, build-commons,build-server, build-games, run"
            description="Main target, starts the building process and runs the project"/>

    <!-- Rebuilds all games (at runtime) -->               
    <target name="rebuildGames" depends="build-commons, build-games"
            description="This target only rebuilds the games and moves them to gamelibs"/>
    
    <!-- Use this target if you want to create a jar of the AIGS. The standard
    jar target will not work. -->               
    <target name="jarAIGS" depends="clean-server, init-server, build-commons,build-server, build-games" description="jars the AIGS">
        <copydir src="gamelibs" dest="dist/gamelibs"/>
        <copydir src="conf" dest="dist/conf"/>
        <copydir src="imgs" dest="dist/imgs"/>
        <antcall target="jar"/>
        
        <!-- Allows to start the server with a double click on some UNIX systems -->               
        <chmod file="dist/AIGS_Server.jar" perm="700"/>
        
        <!-- Create a jar containing the sources -->               
        <jar basedir="src" destfile="dist/AIGS_Sources.jar"/>

        <!-- Create a jar containing the javadoc -->                       
        <antcall target="javadoc"/>
        <jar basedir="dist/javadoc" destfile="dist/AIGS_JavaDoc.jar"/>

    </target>
</project>